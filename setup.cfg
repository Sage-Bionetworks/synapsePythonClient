
[metadata]
name = synapseclient
description = A client for Synapse, a collaborative, open-source research platform that allows teams to share data, track analyses, and collaborate.
author = The Synapse Engineering Team
author_email = platform@sagebase.org
license = Apache-2.0
license_files = LICENSE.txt
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8; variant=GFM
url = https://www.synapse.org
project_urls =
    Source = https://github.com/Sage-Bionetworks/synapsePythonClient
    Tracker = https://github.com/Sage-Bionetworks/synapsePythonClient/issues
    Documentation = https://python-docs.synapse.org
    Changelog = https://python-docs.synapse.org/build/html/index.html#release-notes

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    Development Status :: 5 - Production/Stable
    Programming Language :: Python
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Operating System :: MacOS
    Operating System :: Microsoft :: Windows
    Operating System :: Unix
    Operating System :: POSIX :: Linux
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    License :: OSI Approved :: Apache Software License
    Topic :: Software Development :: Libraries
    Topic :: Scientific/Engineering
    Topic :: Scientific/Engineering :: Bio-Informatics

[options]
zip_safe = False
include_package_data = True
packages =
    synapseclient
    synapseutils
python_requires = >=3.8
# on Linux specify a cryptography dependency that will not
# require a Rust compiler to compile from source (< 3.4).
# on Linux cryptography is a transitive dependency
# (keyring -> SecretStorage -> cryptography)
# SecretStorage doesn't pin a version so otherwise if cryptography
# is not already installed the dependency will resolve to the latest
# and will require Rust if a precompiled wheel cannot be used
# (e.g. old version of pip or no wheel available for an architecture).
# if a newer version of cryptography is already installed that is
# fine we don't want to trigger a downgrade, hence the conditional
# addition of the versioned dependency.
install_requires =
    # "requests>=2.22.0,<2.30.0; python_version<'3.10'",
    requests>=2.22.0,<3.0
    urllib3<2
    # "urllib3>=2; python_version>='3.10'",
    keyring>=15,<23.5
    keyrings.alt==3.1; sys_platform == "linux"
    cryptography<3.4; sys_platform == "linux"
    deprecated>=1.2.4,<2.0
tests_require =
    pytest>=5.0.0,<7.0
    pytest-mock>=3.0,<4.0
    flake8>=3.7.0,<4.0
    pytest-xdist[psutil]>=2.2,<3.0.0

[options.extras_require]
dev =
    pytest>=5.0.0,<7.0
    pytest-mock>=3.0,<4.0
    flake8>=3.7.0,<4.0
    pytest-xdist[psutil]>=2.2,<3.0.0
    black
    pre-commit

tests =
    pytest>=5.0.0,<7.0
    pytest-mock>=3.0,<4.0
    flake8>=3.7.0,<4.0
    pytest-xdist[psutil]>=2.2,<3.0.0

pandas =
    pandas>=1.5,<2.1

pysftp =
    pysftp>=0.2.8,<0.3

boto3 =
    boto3>=1.7.0,<2.0

docs =
    sphinx>=4.0,<5.0
    sphinx-argparse>=0.2,<0.3

[options.entry_points]
console_scripts =
    synapse = synapseclient.__main__:main

[options.package_data]
synapseclient =
    synapsePythonClient
    .synapseConfig

[flake8]

# pep8 default is 80
max-line-length: 120

exclude =
    .*
    build
    docs
    dist


[tool:pytest]

python_files =
    test_*.py
    *_test.py
    *_test_*.py
